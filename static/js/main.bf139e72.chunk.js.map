{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["console","log","data","App","useState","service","setService","command","setCommand","detailType","setDetailType","commandText","setCommandText","object","setObject","handleServiceSelect","e","target","innerHTML","getDTInfo","DTlist","services","detailTypes","filter","obj","name","useEffect","exampleData","endpoint","queueURL","JSON","stringify","dataName","detailField","makeCommand","className","style","width","margin","display","justifyContent","onClick","map","DT","cols","rows","onChange","parse","value","padding","backgroundColor","textAlign","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf139e72.chunk.js","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\nimport data from './data.json';\nconsole.log(data);\n\n\n\nfunction App() {\n  const [service, setService] = useState('');\n  const [command, setCommand] = useState('s');\n  const [detailType, setDetailType] = useState('');\n  const [commandText, setCommandText] = useState('');\n  const [object, setObject] = useState('');\n\n  function handleServiceSelect(e) {\n    setService(e.target.innerHTML);\n  }\n\n  function getDTInfo() {\n    const DTlist = data.services[service]?.detailTypes\n    if (DTlist) {\n      var result = DTlist.filter(obj => {\n        return obj.name === detailType\n      })\n      return result[0]\n    }\n    return undefined\n  }\n\n  useEffect(() => {\n    setObject(getDTInfo()?.exampleData)\n  }, [service, command, detailType])\n\n  useEffect(() => {\n    function makeCommand() {\n      const endpoint = data.services[service]?.endpoint\n      const queueURL = data.services[service]?.queueURL\n      console.log(object)\n      console.log(JSON.stringify(object))\n      if (command ==='send') {\n        const dataName = getDTInfo()?.detailField\n        const str = `aws --endpoint-url=${endpoint} sqs send-message --queue-url ${queueURL} --message-body '{ \"version\": \"0\", \"id\": \"a2a13500-9ad4-f384-new-new\", \"detail-type\": ${detailType}, \"source\": \"guzzle-dev\", \"account\": \"188291258129\", \"time\": \"2021-04-13T19:38:50Z\", \"region\": \"us-west-1\", \"resources\": [], \"detail\": { \"${dataName}\": ${JSON.stringify(object)}} }'`\n        return str;\n      } else if (command === 'read') {\n        return `aws --endpoint-url=${endpoint} sqs receive-message --max-number-of-messages 10 --queue-url ${queueURL}`\n      } else if (command === 'clear') {\n        return `aws --endpoint-url=${endpoint} sqs purge-queue --queue-url ${queueURL}`\n      }\n    }\n    setCommandText(makeCommand());\n  }, [command, service, detailType, object])\n\n  return (\n    <div className=\"App\">\n      <div style={{width: '50%', margin: 'auto'}}>\n        <div className=\"container\">\n          <h3>What service are you working with?</h3>\n          <div style={{display: 'flex', justifyContent: 'space-between'}}>\n            <div className={(service === 'Orders Service') ? \"selectedOption\" : \"option\"} onClick={(e) => {handleServiceSelect(e)}}>Orders Service</div>\n            <div className={(service === 'Shops Service') ? \"selectedOption\" : \"option\"} onClick={(e) => {handleServiceSelect(e)}}>Shops Service</div>\n            <div className={(service === 'Products Service') ? \"selectedOption\" : \"option\"} onClick={(e) => {handleServiceSelect(e)}}>Products Service</div>\n          </div>\n        </div>\n        <div className=\"container\">\n          <h3>What are you trying to do?</h3>\n          <div style={{display: 'flex', justifyContent: 'space-between'}}>\n            <div className={(command === 'send') ? \"selectedOption\" : \"option\"} onClick={(e) => {setCommand('send')}}>send a message</div>\n            <div className={(command === 'read') ? \"selectedOption\" : \"option\"} onClick={(e) => {setCommand('read')}}>read messages</div>\n            <div className={(command === 'clear') ? \"selectedOption\" : \"option\"} onClick={(e) => {setCommand('clear')}}>clear the queue</div>\n          </div>\n        </div>\n        {(command === 'send') && \n        <>\n          <div className=\"container\">\n            <h3>What message?</h3>\n            {data.services[service]?.detailTypes.map((DT) => {\n              return (\n                <div key={DT.name} className={(detailType === DT.name) ? \"selectedOption\" : \"option\"} onClick={(e) => {setDetailType(DT.name)}}>{DT.name}</div>\n              )\n            })}\n          </div>\n\n          <div className=\"container\">\n            <h3>Enter the js object you want to send:</h3>\n            <textarea \n              cols=\"50\" rows=\"10\"\n              onChange={(e) => {setObject(JSON.parse(e.target.value))}} \n              value={JSON.stringify(object)}></textarea>\n          </div>\n        </>\n        }\n        <div className=\"container\">\n          <h3>Here's your command, sir:</h3>\n          <div style={{padding: '5px', backgroundColor: 'lightgrey', textAlign: 'left'}}>{commandText}</div>\n        </div>\n        <div style={{marginBottom: '100px'}} />\n      </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}